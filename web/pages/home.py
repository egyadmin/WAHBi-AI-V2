import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go
from datetime import datetime, timedelta

def create_sample_tenders_data():
    """
    ุฅูุดุงุก ุจูุงูุงุช ุชูุถูุญูุฉ ููููุงูุตุงุช
    """
    # ุชูุงุฑูุฎ ุนุดูุงุฆูุฉ ุฎูุงู ุงูุดูุฑูู ุงููุงุฏููู
    today = datetime.now().date()
    dates = [today + timedelta(days=np.random.randint(1, 60)) for _ in range(20)]
    
    # ุญุงูุงุช ุงูููุงูุตุงุช
    statuses = ['ุฌุฏูุฏุฉ', 'ููุฏ ุงูุชุญููู', 'ุฌุงูุฒุฉ ููุชูุฏูู', 'ุชู ุงูุชูุฏูู', 'ุงูุชูุช']
    
    # ุงูุฌูุงุช
    agencies = [
        'ูุฒุงุฑุฉ ุงูุฅุณูุงู', 'ูุฒุงุฑุฉ ุงูููู', 'ุฃูุงูุฉ ุงูุฑูุงุถ', 'ุงูููุฆุฉ ุงูููููุฉ', 
        'ูุฒุงุฑุฉ ุงูุตุญุฉ', 'ูุฒุงุฑุฉ ุงูุชุนููู', 'ุดุฑูุฉ ุฃุฑุงููู', 'ุดุฑูุฉ ุณุงุจู', 
        'ููุฆุฉ ุงููุฏู ุงูุตูุงุนูุฉ', 'ุงูููุฆุฉ ุงูุนุงูุฉ ููุชุฑููู'
    ]
    
    # ุงููุทุงุนุงุช
    sectors = ['ุงูุจููุฉ ุงูุชุญุชูุฉ', 'ุงููุจุงูู', 'ุงูุทุฑู', 'ุงูุทุงูุฉ', 'ุงูููุงู', 'ุงูุตุญุฉ', 'ุงูุชุนููู', 'ุงูุตูุงุนุฉ']
    
    # ุฅูุดุงุก ุงูุจูุงูุงุช
    data = {
        'ุฑูู ุงูููุงูุตุฉ': [f"T-{2025}-{np.random.randint(1000, 9999)}" for _ in range(20)],
        'ุงูุฌูุฉ': [np.random.choice(agencies) for _ in range(20)],
        'ุงุณู ุงููุดุฑูุน': [
            'ุฅูุดุงุก ุทุฑูู ุฏุงุฆุฑู', 'ุชุทููุฑ ุดุจูุฉ ููุงู', 'ุจูุงุก ูุฏุฑุณุฉ', 'ุชุฌุฏูุฏ ูุณุชุดูู',
            'ุฅูุดุงุก ุญุฏููุฉ ุนุงูุฉ', 'ุชุทููุฑ ููุทูุฉ ุตูุงุนูุฉ', 'ุตูุงูุฉ ุทุฑู', 'ุจูุงุก ูุฑูุฒ ุชุฌุงุฑู',
            'ุชุทููุฑ ุจููุฉ ุชุญุชูุฉ', 'ุฅูุดุงุก ูุญุทุฉ ุชุญููุฉ', 'ุจูุงุก ูุฌูุน ุณููู', 'ุชุทููุฑ ูุฑูุฒ ุฃุจุญุงุซ',
            'ุตูุงูุฉ ุดุจูุฉ ููุฑุจุงุก', 'ุฅูุดุงุก ููุงุนุจ ุฑูุงุถูุฉ', 'ุชุทููุฑ ูุทุงุฑ', 'ุฅูุดุงุก ูุจูู ุฅุฏุงุฑู',
            'ุชุทููุฑ ุดุจูุฉ ุงุชุตุงูุงุช', 'ุจูุงุก ูุฑูุฒ ุซูุงูู', 'ุฅูุดุงุก ูุญุทุฉ ุทุงูุฉ ุดูุณูุฉ', 'ุชุทููุฑ ููุทูุฉ ุณุงุญููุฉ'
        ],
        'ุงููููุฉ ุงูุชูุฏูุฑูุฉ (ููููู)': np.random.uniform(10, 200, 20).round(1),
        'ุงูููุนุฏ ุงูููุงุฆู': dates,
        'ุญุงูุฉ ุงูููุงูุตุฉ': [np.random.choice(statuses, p=[0.3, 0.3, 0.2, 0.1, 0.1]) for _ in range(20)],
        'ุงููุญุชูู ุงููุญูู ุงููุทููุจ': [np.random.randint(30, 70) for _ in range(20)],
        'ุงููุทุงุน': [np.random.choice(sectors) for _ in range(20)]
    }
    
    return pd.DataFrame(data)

def show_home_page():
    """
    ุนุฑุถ ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ ูุน ููุญุฉ ุงููุนูููุงุช
    """
    # ุจูุงูุงุช ุชูุถูุญูุฉ ููููุงูุตุงุช ุงููุดุทุฉ
    active_tenders = create_sample_tenders_data()
    
    # ุนุฑุถ ุงููุคุดุฑุงุช ุงูุฑุฆูุณูุฉ
    st.subheader("ุงููุคุดุฑุงุช ุงูุฑุฆูุณูุฉ")
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric(
            label="ุงูููุงูุตุงุช ุงููุดุทุฉ",
            value=f"{len(active_tenders)}",
            delta="3 โ"
        )
    
    with col2:
        st.metric(
            label="ูุชูุณุท ุงููุญุชูู ุงููุญูู",
            value="67.8%",
            delta="2.5% โ"
        )
    
    with col3:
        st.metric(
            label="ุงูุนุทุงุกุงุช ุงููุงุฆุฒุฉ",
            value="12",
            delta="2 โ"
        )
    
    with col4:
        st.metric(
            label="ูููุฉ ุงููุดุงุฑูุน (ููููู ุฑูุงู)",
            value="463.5",
            delta="85.2 โ"
        )
    
    # ุนุฑุถ ุงูููุงูุตุงุช ุงููุดุทุฉ
    st.subheader("ุงูููุงูุตุงุช ุงููุดุทุฉ")
    st.dataframe(
        active_tenders[['ุฑูู ุงูููุงูุตุฉ', 'ุงูุฌูุฉ', 'ุงุณู ุงููุดุฑูุน', 'ุงููููุฉ ุงูุชูุฏูุฑูุฉ (ููููู)', 'ุงูููุนุฏ ุงูููุงุฆู', 'ุญุงูุฉ ุงูููุงูุตุฉ']], 
        use_container_width=True
    )
    
    # ุชูุฒูุน ุงูููุงูุตุงุช ุญุณุจ ุงููุทุงุน
    st.subheader("ุชูุฒูุน ุงูููุงูุตุงุช ุญุณุจ ุงููุทุงุน")
    sectors_df = active_tenders.groupby('ุงููุทุงุน').size().reset_index(name='ุนุฏุฏ ุงูููุงูุตุงุช')
    
    fig = px.pie(
        sectors_df, 
        values='ุนุฏุฏ ุงูููุงูุตุงุช', 
        names='ุงููุทุงุน',
        color_discrete_sequence=px.colors.qualitative.Bold,
        title="ุชูุฒูุน ุงูููุงูุตุงุช ุญุณุจ ุงููุทุงุน"
    )
    fig.update_traces(textposition='inside', textinfo='percent+label')
    st.plotly_chart(fig, use_container_width=True)
    
    # ุงูููุงูุตุงุช ุงูููุจูุฉ ูุงูุชููุนุงุช
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("ุงูููุงูุตุงุช ุงูููุจูุฉ")
        upcoming_df = active_tenders[active_tenders['ุงูููุนุฏ ุงูููุงุฆู'] > datetime.now().date()]
        upcoming_df = upcoming_df.sort_values('ุงูููุนุฏ ุงูููุงุฆู')
        
        for _, row in upcoming_df.head(5).iterrows():
            with st.container():
                st.markdown(f"""
                **{row['ุงุณู ุงููุดุฑูุน']}**  
                **ุงูุฌูุฉ:** {row['ุงูุฌูุฉ']}  
                **ุงููููุฉ ุงูุชูุฏูุฑูุฉ:** {row['ุงููููุฉ ุงูุชูุฏูุฑูุฉ (ููููู)']} ููููู ุฑูุงู  
                **ุงูููุนุฏ ุงูููุงุฆู:** {row['ุงูููุนุฏ ุงูููุงุฆู'].strftime('%Y/%m/%d')}
                """)
                st.markdown("---")
    
    with col2:
        st.subheader("ุชููุนุงุช ุงููุฌุงุญ")
        
        # ุจูุงูุงุช ุชูุถูุญูุฉ ูุชููุนุงุช ุงููุฌุงุญ
        prediction_data = {
            'ุงููุดุฑูุน': [
                'ุชุทููุฑ ุงูุจููุฉ ุงูุชุญุชูุฉ ูู ุงูููุทูุฉ ุงูุดุฑููุฉ',
                'ุฅูุดุงุก ูุจุงูู ุณูููุฉ ูู ุงูุฑูุงุถ',
                'ุตูุงูุฉ ุงูุทุฑู ูู ุงููุฏููุฉ ุงููููุฑุฉ',
                'ุชูุณุนุฉ ุดุจูุฉ ุงูููุงู ูู ุฌุฏุฉ',
                'ุฅูุดุงุก ูุฑูุฒ ุจูุงูุงุช ูู ุงูุฏูุงู'
            ],
            'ุงุญุชูุงููุฉ ุงููุฌุงุญ': [85, 72, 63, 91, 77]
        }
        
        for i, proj in enumerate(prediction_data['ุงููุดุฑูุน']):
            prob = prediction_data['ุงุญุชูุงููุฉ ุงููุฌุงุญ'][i]
            color = "green" if prob >= 80 else "orange" if prob >= 60 else "red"
            
            st.markdown(f"**{proj}**")
            st.progress(prob/100)
            st.markdown(f"<span style='color:{color}'><b>ุงุญุชูุงููุฉ ุงููุฌุงุญ: {prob}%</b></span>", unsafe_allow_html=True)
            st.markdown("---")
    
    # ุชูุฒูุน ุงูููุงูุตุงุช ุญุณุจ ุงูุดูุฑ (ููุซุงู ุนูู ุฑุณู ุจูุงูู ุฅุถุงูู)
    st.subheader("ุชูุฒูุน ุงูููุงูุตุงุช ุญุณุจ ุงูุดูุฑ")
    
    # ุฅุถุงูุฉ ุดูุฑ ูุนููุฏ ูู DataFrame
    active_tenders['ุงูุดูุฑ'] = active_tenders['ุงูููุนุฏ ุงูููุงุฆู'].apply(lambda x: x.strftime('%Y-%m'))
    monthly_df = active_tenders.groupby('ุงูุดูุฑ').size().reset_index(name='ุนุฏุฏ ุงูููุงูุตุงุช')
    
    fig = px.bar(
        monthly_df, 
        x='ุงูุดูุฑ', 
        y='ุนุฏุฏ ุงูููุงูุตุงุช',
        color='ุนุฏุฏ ุงูููุงูุตุงุช',
        color_continuous_scale='Viridis',
        title="ุชูุฒูุน ุงูููุงูุตุงุช ุญุณุจ ุงูุดูุฑ"
    )
    
    st.plotly_chart(fig, use_container_width=True)
    
    # ุฑูุงุจุท ุณุฑูุนุฉ ููุนูููุงุช ุงูุดุงุฆุนุฉ
    st.subheader("ุฑูุงุจุท ุณุฑูุนุฉ")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        if st.button("ุชุญููู ููุงูุตุฉ ุฌุฏูุฏุฉ", key="new_analysis"):
            st.session_state.page = "ุชุญููู ุงูููุงูุตุงุช"
            st.experimental_rerun()
    
    with col2:
        if st.button("ุงูุจุญุซ ูู ูุงุนุฏุฉ ุงูููุฑุฏูู", key="search_vendors"):
            st.session_state.page = "ุงูููุฑุฏูู ูุงูููุงูููู"
            st.experimental_rerun()
    
    with col3:
        if st.button("ุชูุฑูุฑ ุงููุญุชูู ุงููุญูู", key="local_content_report"):
            st.session_state.page = "ุงููุญุชูู ุงููุญูู"
            st.experimental_rerun()

# ุงุฎุชุจุงุฑ ูุณุชูู ููุตูุญุฉ
if __name__ == "__main__":
    st.set_page_config(
        page_title="ูุธุงู ุชุญููู ุงูููุงูุตุงุช - ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ",
        page_icon="๐",
        layout="wide",
    )
    show_home_page()